loading annotations into memory...
Done (t=0.10s)
creating index...
index created!
loading annotations into memory...
Done (t=0.34s)
creating index...
index created!
Num training images: 2031
Epoch: 0 | Iteration: 0 | Classification loss: 1.13452 | Regression loss: 1.00904 | Running loss: 2.14356








98it [00:32,  3.17it/s]
















197it [01:04,  3.01it/s]
















298it [01:36,  3.19it/s]
















399it [02:08,  2.99it/s]
















499it [02:40,  3.38it/s]
















600it [03:12,  3.10it/s]
















699it [03:44,  3.02it/s]















795it [04:14,  3.16it/s]

















900it [04:48,  3.16it/s]















997it [05:18,  2.89it/s]


1016it [05:24,  3.13it/s]
0it [00:00, ?it/s]
















99it [00:32,  3.44it/s]
















200it [01:03,  3.21it/s]
















301it [01:36,  2.98it/s]















398it [02:06,  2.97it/s]
















499it [02:38,  3.31it/s]
















600it [03:09,  2.90it/s]















695it [03:40,  3.37it/s]
















797it [04:12,  3.23it/s]
















899it [04:44,  3.10it/s]















995it [05:13,  3.20it/s]



1016it [05:20,  3.46it/s]
1016it [05:20,  3.17it/s]















99it [00:31,  3.18it/s]
















196it [01:03,  2.99it/s]
















295it [01:35,  3.44it/s]
















395it [02:07,  3.41it/s]

















498it [02:42,  3.06it/s]
















597it [03:14,  2.40it/s]
















700it [03:46,  3.29it/s]
















798it [04:18,  3.15it/s]
















896it [04:50,  3.11it/s]

















1000it [05:24,  3.53it/s]


1016it [05:29,  3.08it/s]
0it [00:00, ?it/s]















96it [00:30,  3.11it/s]















193it [01:00,  3.24it/s]
















298it [01:32,  3.12it/s]
















398it [02:04,  2.92it/s]

















499it [02:38,  2.10it/s]

















607it [03:12,  3.34it/s]















696it [03:42,  3.45it/s]

















799it [04:16,  3.33it/s]
















899it [04:48,  3.14it/s]















995it [05:19,  3.48it/s]



1016it [05:25,  3.12it/s]
0it [00:00, ?it/s]
















97it [00:33,  2.97it/s]


















199it [01:09,  1.93it/s]

















302it [01:43,  3.20it/s]
















403it [02:15,  3.15it/s]
















503it [02:47,  3.16it/s]
















603it [03:19,  2.42it/s]

















705it [03:53,  3.15it/s]
















802it [04:25,  3.06it/s]

















900it [04:59,  3.41it/s]
















1003it [05:31,  3.03it/s]


1016it [05:35,  3.03it/s]

2it [00:03,  1.59s/it]
















105it [00:35,  3.09it/s]
















205it [01:07,  3.39it/s]
















306it [01:39,  3.05it/s]
















402it [02:12,  3.09it/s]
















501it [02:44,  2.96it/s]


















606it [03:20,  3.17it/s]
















705it [03:52,  3.12it/s]
















805it [04:24,  3.18it/s]
















908it [04:56,  3.04it/s]
















1009it [05:28,  3.36it/s]

1016it [05:30,  3.07it/s]
2it [00:01,  1.82it/s]
















103it [00:32,  3.10it/s]
















205it [01:04,  3.14it/s]















301it [01:35,  3.21it/s]
















401it [02:07,  2.92it/s]
















503it [02:39,  3.09it/s]
















604it [03:11,  3.21it/s]














695it [03:39,  3.38it/s]

















800it [04:13,  2.97it/s]















897it [04:43,  3.27it/s]

















1000it [05:17,  2.74it/s]


1016it [05:22,  3.15it/s]
0it [00:00, ?it/s]















96it [00:30,  3.24it/s]
















198it [01:02,  3.21it/s]

















298it [01:34,  2.99it/s]
















399it [02:08,  3.21it/s]
















496it [02:40,  3.03it/s]
















596it [03:12,  2.66it/s]
















695it [03:44,  3.00it/s]
















794it [04:16,  3.14it/s]

















899it [04:50,  3.16it/s]
















999it [05:22,  3.13it/s]


1016it [05:28,  3.10it/s]
0it [00:00, ?it/s]















95it [00:30,  3.03it/s]
















199it [01:02,  3.00it/s]
















298it [01:34,  3.14it/s]
















400it [02:06,  3.36it/s]















498it [02:36,  3.44it/s]

















604it [03:10,  3.11it/s]
















700it [03:42,  3.13it/s]
















799it [04:14,  3.36it/s]
















895it [04:47,  3.03it/s]
















996it [05:19,  2.94it/s]


1016it [05:25,  3.12it/s]
0it [00:00, ?it/s]
















101it [00:31,  3.10it/s]















196it [01:01,  3.22it/s]
















295it [01:33,  2.08it/s]
















395it [02:05,  3.11it/s]
















498it [02:37,  3.58it/s]
















598it [03:09,  3.07it/s]















693it [03:39,  3.45it/s]

















799it [04:13,  3.31it/s]
















899it [04:45,  3.27it/s]
















1000it [05:18,  2.95it/s]


1012it [05:22,  2.95it/s]
1016it [05:23,  3.14it/s]


































































































































































100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1517/1517 [05:26<00:00,  4.65it/s]
0it [00:00, ?it/s]
















100it [00:32,  3.16it/s]















197it [01:02,  3.14it/s]
















297it [01:34,  3.34it/s]
















397it [02:06,  3.49it/s]
















496it [02:38,  3.35it/s]

501it [02:40,  3.13it/s]
Traceback (most recent call last):
  File "train.py", line 147, in <module>
    main()
  File "train.py", line 84, in main
    classification_loss, regression_loss = retinanet([data['img'].cuda().float(), data['annot'].cuda()])
  File "/userhome/cs2/u3619861/anaconda3/envs/retinanet/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/userhome/cs2/u3619861/DASC7606/retinanet/model.py", line 134, in forward
    anchors = self.anchors(img_batch)
  File "/userhome/cs2/u3619861/anaconda3/envs/retinanet/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/userhome/cs2/u3619861/DASC7606/retinanet/anchors.py", line 33, in forward
    all_anchors     = np.append(all_anchors, shifted_anchors, axis=0)
  File "<__array_function__ internals>", line 200, in append
  File "/userhome/cs2/u3619861/anaconda3/envs/retinanet/lib/python3.8/site-packages/numpy/lib/function_base.py", line 5499, in append
    return concatenate((arr, values), axis=axis)
  File "<__array_function__ internals>", line 200, in concatenate
KeyboardInterrupt